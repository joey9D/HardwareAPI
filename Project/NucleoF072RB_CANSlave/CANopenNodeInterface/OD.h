/*******************************************************************************
    CANopen Object Dictionary definition for CANopenNode V4

    This file was automatically generated by CANopenEditor v4.2.3-1-gda8409a+da8409a60d4fcb997a85ffd2c672744b7f600cec

    https://github.com/CANopenNode/CANopenNode
    https://github.com/CANopenNode/CANopenEditor

    DON'T EDIT THIS FILE MANUALLY !!!!
********************************************************************************

    File info:
        File Names:   OD.h; OD.c
        Project File: test.xdd
        File Version: 1

        Created:      06.12.2023 13:58:09
        Created By:   mg
        Modified:     17.03.2025 08:18:36
        Modified By:  

    Device Info:
        Vendor Name:  Musterman
        Vendor ID:    0815
        Product Name: LiftTest
        Product ID:   1234

        Description:  Test for Lift Slave
*******************************************************************************/

#ifndef OD_H
#define OD_H
/*******************************************************************************
    Counters of OD objects
*******************************************************************************/
#define OD_CNT_NMT 1
#define OD_CNT_EM 1
#define OD_CNT_SYNC 1
#define OD_CNT_SYNC_PROD 1
#define OD_CNT_STORAGE 1
#define OD_CNT_TIME 1
#define OD_CNT_EM_PROD 1
#define OD_CNT_HB_CONS 1
#define OD_CNT_HB_PROD 1
#define OD_CNT_SDO_SRV 1
#define OD_CNT_SDO_CLI 1
#define OD_CNT_RPDO 1
#define OD_CNT_TPDO 1


/*******************************************************************************
    Sizes of OD arrays
*******************************************************************************/
#define OD_CNT_ARR_1003 16
#define OD_CNT_ARR_1010 4
#define OD_CNT_ARR_1011 4
#define OD_CNT_ARR_1016 8
#define OD_CNT_ARR_1029 2
#define OD_CNT_ARR_2001 3
#define OD_CNT_ARR_2002 3
#define OD_CNT_ARR_2010 2
#define OD_CNT_ARR_2011 1
#define OD_CNT_ARR_6000 2
#define OD_CNT_ARR_6009 1
#define OD_CNT_ARR_6080 1
#define OD_CNT_ARR_6081 1
#define OD_CNT_ARR_6082 1
#define OD_CNT_ARR_6089 1
#define OD_CNT_ARR_608A 1
#define OD_CNT_ARR_608B 3
#define OD_CNT_ARR_6100 8
#define OD_CNT_ARR_6120 8
#define OD_CNT_ARR_6140 8
#define OD_CNT_ARR_6160 8
#define OD_CNT_ARR_6200 8
#define OD_CNT_ARR_6220 8
#define OD_CNT_ARR_6240 8
#define OD_CNT_ARR_6260 8
#define OD_CNT_ARR_62B0 1
#define OD_CNT_ARR_6530 4
#define OD_CNT_ARR_6531 4


/*******************************************************************************
    OD data declaration of all groups
*******************************************************************************/
typedef struct {
    uint32_t x1000_deviceType;
    uint32_t x1005_COB_ID_SYNCMessage;
    uint32_t x1006_communicationCyclePeriod;
    uint32_t x1007_synchronousWindowLength;
    char x1008_manufacturerDeviceName[11];
    char x1009_manufacturerHardwareVersion[7];
    char x100A_manufacturerSoftwareVersion[7];
    uint32_t x1012_COB_IDTimeStampObject;
    uint32_t x1014_COB_ID_EMCY;
    uint16_t x1015_inhibitTimeEMCY;
    uint8_t x1016_consumerHeartbeatTime_sub0;
    uint32_t x1016_consumerHeartbeatTime[OD_CNT_ARR_1016];
    uint16_t x1017_producerHeartbeatTime;
    struct {
        uint8_t highestSub_indexSupported;
        uint32_t vendor_ID;
        uint32_t productCode;
        uint32_t revisionNumber;
        uint32_t serialNumber;
    } x1018_identity;
    uint8_t x1019_synchronousCounterOverflowValue;
    uint8_t x1029_errorBehaviorObject_sub0;
    uint8_t x1029_errorBehaviorObject[OD_CNT_ARR_1029];
    struct {
        uint8_t highestSub_indexSupported;
        uint32_t COB_IDClientToServerTx;
        uint32_t COB_IDServerToClientRx;
        uint8_t node_IDOfTheSDOServer;
    } x1280_SDOClientParameter;
    struct {
        uint8_t highestSub_indexSupported;
        uint32_t COB_IDUsedByRPDO;
        uint8_t transmissionType;
        uint16_t eventTimer;
    } x1400_RPDOCommunicationParameter;
    struct {
        uint8_t numberOfMappedApplicationObjectsInPDO;
        uint32_t applicationObject1;
        uint32_t applicationObject2;
        uint32_t applicationObject3;
        uint32_t applicationObject4;
        uint32_t applicationObject5;
        uint32_t applicationObject6;
        uint32_t applicationObject7;
        uint32_t applicationObject8;
    } x1600_RPDOMappingParameter;
    struct {
        uint8_t highestSub_indexSupported;
        uint32_t COB_IDUsedByTPDO;
        uint8_t transmissionType;
        uint16_t inhibitTime;
        uint16_t eventTimer;
        uint8_t SYNCStartValue;
    } x1800_TPDOCommunicationParameter;
    struct {
        uint8_t numberOfMappedApplicationObjectsInPDO;
        uint32_t applicationObject1;
        uint32_t applicationObject2;
        uint32_t applicationObject3;
        uint32_t applicationObject4;
        uint32_t applicationObject5;
        uint32_t applicationObject6;
        uint32_t applicationObject7;
        uint32_t applicationObject8;
    } x1A00_TPDOMappingParameter;
} OD_PERSIST_COMM_t;

typedef struct {
    uint8_t x1001_errorRegister;
    uint32_t x1002_manufacturerStatusRegister;
    uint8_t x1010_storeParameters_sub0;
    uint32_t x1010_storeParameters[OD_CNT_ARR_1010];
    uint8_t x1011_restoreDefaultParameters_sub0;
    uint32_t x1011_restoreDefaultParameters[OD_CNT_ARR_1011];
    struct {
        uint8_t highestSub_indexSupported;
        uint32_t COB_IDClientToServerRx;
        uint32_t COB_IDServerToClientTx;
    } x1200_SDOServerParameter;
    uint32_t x1F80_NMTStartup;
    uint8_t x2001_inputAdjustment_sub0;
    uint8_t x2001_inputAdjustment[OD_CNT_ARR_2001];
    uint8_t x2002_outputAdjustment_sub0;
    uint32_t x2002_outputAdjustment[OD_CNT_ARR_2002];
    uint8_t x2010_inputClamp_sub0;
    uint32_t x2010_inputClamp[OD_CNT_ARR_2010];
    uint8_t x2011_outputClamp_sub0;
    uint32_t x2011_outputClamp[OD_CNT_ARR_2011];
    uint8_t x6000_supportedVirtualDeviceTypes_sub0;
    uint16_t x6000_supportedVirtualDeviceTypes[OD_CNT_ARR_6000];
    uint8_t x6001_liftNumber;
    uint8_t x6002_floorNumber;
    uint8_t x6003_carDoorNumber;
    uint16_t x6008_specificationVersion;
    uint8_t x6010_virtualInputMapping[6];
    uint8_t x6011_virtualOutputMapping[6];
    uint8_t x6089_CMStatusword_sub0;
    uint32_t x6089_CMStatusword[OD_CNT_ARR_6089];
    uint8_t x608A_CM_SIUnitAndPrefix_sub0;
    uint8_t x608B_CM_DataPointConfiguration_sub0;
    uint16_t x608B_CM_DataPointConfiguration[OD_CNT_ARR_608B];
} OD_RAM_t;

typedef struct {
    uint8_t x6009_certificationLabel_sub0;
    char x6009_certificationLabel[OD_CNT_ARR_6009][9];
    uint8_t x6082_CM_Mode_sub0;
    uint8_t x6082_CM_Mode[OD_CNT_ARR_6082];
    uint8_t x6100_inputGroup1_sub0;
    uint8_t x6100_inputGroup1[OD_CNT_ARR_6100][6];
    uint8_t x6120_inputParameter1Group1_sub0;
    uint32_t x6120_inputParameter1Group1[OD_CNT_ARR_6120];
    uint8_t x6140_inputParameter2Group1_sub0;
    uint32_t x6140_inputParameter2Group1[OD_CNT_ARR_6140];
    uint8_t x6160_inputParameter3Group1_sub0;
    uint32_t x6160_inputParameter3Group1[OD_CNT_ARR_6160];
    uint8_t x6200_outputGroup1_sub0;
    uint8_t x6200_outputGroup1[OD_CNT_ARR_6200][6];
    uint8_t x6220_outputParameter1Group1_sub0;
    uint32_t x6220_outputParameter1Group1[OD_CNT_ARR_6220];
    uint8_t x6240_outputParameter2Group1_sub0;
    uint32_t x6240_outputParameter2Group1[OD_CNT_ARR_6240];
    uint8_t x6260_outputParameter3Group1_sub0;
    uint32_t x6260_outputParameter3Group1[OD_CNT_ARR_6260];
    uint8_t x62B0_textPositionIndication_sub0;
    char x62B0_textPositionIndication[OD_CNT_ARR_62B0][2];
    uint8_t x6530_floorAndMessageDisplayCar_sub0;
    uint32_t x6530_floorAndMessageDisplayCar[OD_CNT_ARR_6530];
    uint8_t x6531_floorAndMessageDisplayShaft_sub0;
    uint32_t x6531_floorAndMessageDisplayShaft[OD_CNT_ARR_6531];
} OD_EEPROM_t;

typedef struct {
    uint8_t x6080_CM_IdentificationLocation_sub0;
    uint32_t x6080_CM_IdentificationLocation[OD_CNT_ARR_6080];
    uint8_t x6081_CM_FunctionID_sub0;
    uint32_t x6081_CM_FunctionID[OD_CNT_ARR_6081];
} OD_ROM_t;

#ifndef OD_ATTR_PERSIST_COMM
#define OD_ATTR_PERSIST_COMM
#endif
extern OD_ATTR_PERSIST_COMM OD_PERSIST_COMM_t OD_PERSIST_COMM;

#ifndef OD_ATTR_RAM
#define OD_ATTR_RAM
#endif
extern OD_ATTR_RAM OD_RAM_t OD_RAM;

#ifndef OD_ATTR_EEPROM
#define OD_ATTR_EEPROM
#endif
extern OD_ATTR_EEPROM OD_EEPROM_t OD_EEPROM;

#ifndef OD_ATTR_ROM
#define OD_ATTR_ROM
#endif
extern OD_ATTR_ROM OD_ROM_t OD_ROM;

#ifndef OD_ATTR_OD
#define OD_ATTR_OD
#endif
extern OD_ATTR_OD OD_t *OD;


/*******************************************************************************
    Object dictionary entries - shortcuts
*******************************************************************************/
#define OD_ENTRY_H1000 &OD->list[0]
#define OD_ENTRY_H1001 &OD->list[1]
#define OD_ENTRY_H1002 &OD->list[2]
#define OD_ENTRY_H1003 &OD->list[3]
#define OD_ENTRY_H1005 &OD->list[4]
#define OD_ENTRY_H1006 &OD->list[5]
#define OD_ENTRY_H1007 &OD->list[6]
#define OD_ENTRY_H1008 &OD->list[7]
#define OD_ENTRY_H1009 &OD->list[8]
#define OD_ENTRY_H100A &OD->list[9]
#define OD_ENTRY_H1010 &OD->list[10]
#define OD_ENTRY_H1011 &OD->list[11]
#define OD_ENTRY_H1012 &OD->list[12]
#define OD_ENTRY_H1014 &OD->list[13]
#define OD_ENTRY_H1015 &OD->list[14]
#define OD_ENTRY_H1016 &OD->list[15]
#define OD_ENTRY_H1017 &OD->list[16]
#define OD_ENTRY_H1018 &OD->list[17]
#define OD_ENTRY_H1019 &OD->list[18]
#define OD_ENTRY_H1029 &OD->list[19]
#define OD_ENTRY_H1200 &OD->list[20]
#define OD_ENTRY_H1280 &OD->list[21]
#define OD_ENTRY_H1400 &OD->list[22]
#define OD_ENTRY_H1600 &OD->list[23]
#define OD_ENTRY_H1800 &OD->list[24]
#define OD_ENTRY_H1A00 &OD->list[25]
#define OD_ENTRY_H1F80 &OD->list[26]
#define OD_ENTRY_H1F89 &OD->list[27]
#define OD_ENTRY_H2001 &OD->list[28]
#define OD_ENTRY_H2002 &OD->list[29]
#define OD_ENTRY_H2010 &OD->list[30]
#define OD_ENTRY_H2011 &OD->list[31]
#define OD_ENTRY_H6000 &OD->list[32]
#define OD_ENTRY_H6001 &OD->list[33]
#define OD_ENTRY_H6002 &OD->list[34]
#define OD_ENTRY_H6003 &OD->list[35]
#define OD_ENTRY_H6008 &OD->list[36]
#define OD_ENTRY_H6009 &OD->list[37]
#define OD_ENTRY_H6010 &OD->list[38]
#define OD_ENTRY_H6011 &OD->list[39]
#define OD_ENTRY_H6080 &OD->list[40]
#define OD_ENTRY_H6081 &OD->list[41]
#define OD_ENTRY_H6082 &OD->list[42]
#define OD_ENTRY_H6089 &OD->list[43]
#define OD_ENTRY_H608A &OD->list[44]
#define OD_ENTRY_H608B &OD->list[45]
#define OD_ENTRY_H6100 &OD->list[46]
#define OD_ENTRY_H6120 &OD->list[47]
#define OD_ENTRY_H6140 &OD->list[48]
#define OD_ENTRY_H6160 &OD->list[49]
#define OD_ENTRY_H6200 &OD->list[50]
#define OD_ENTRY_H6220 &OD->list[51]
#define OD_ENTRY_H6240 &OD->list[52]
#define OD_ENTRY_H6260 &OD->list[53]
#define OD_ENTRY_H62B0 &OD->list[54]
#define OD_ENTRY_H6530 &OD->list[55]
#define OD_ENTRY_H6531 &OD->list[56]


/*******************************************************************************
    Object dictionary entries - shortcuts with names
*******************************************************************************/
#define OD_ENTRY_H1000_deviceType &OD->list[0]
#define OD_ENTRY_H1001_errorRegister &OD->list[1]
#define OD_ENTRY_H1002_manufacturerStatusRegister &OD->list[2]
#define OD_ENTRY_H1003_pre_definedErrorField &OD->list[3]
#define OD_ENTRY_H1005_COB_ID_SYNCMessage &OD->list[4]
#define OD_ENTRY_H1006_communicationCyclePeriod &OD->list[5]
#define OD_ENTRY_H1007_synchronousWindowLength &OD->list[6]
#define OD_ENTRY_H1008_manufacturerDeviceName &OD->list[7]
#define OD_ENTRY_H1009_manufacturerHardwareVersion &OD->list[8]
#define OD_ENTRY_H100A_manufacturerSoftwareVersion &OD->list[9]
#define OD_ENTRY_H1010_storeParameters &OD->list[10]
#define OD_ENTRY_H1011_restoreDefaultParameters &OD->list[11]
#define OD_ENTRY_H1012_COB_IDTimeStampObject &OD->list[12]
#define OD_ENTRY_H1014_COB_ID_EMCY &OD->list[13]
#define OD_ENTRY_H1015_inhibitTimeEMCY &OD->list[14]
#define OD_ENTRY_H1016_consumerHeartbeatTime &OD->list[15]
#define OD_ENTRY_H1017_producerHeartbeatTime &OD->list[16]
#define OD_ENTRY_H1018_identity &OD->list[17]
#define OD_ENTRY_H1019_synchronousCounterOverflowValue &OD->list[18]
#define OD_ENTRY_H1029_errorBehaviorObject &OD->list[19]
#define OD_ENTRY_H1200_SDOServerParameter &OD->list[20]
#define OD_ENTRY_H1280_SDOClientParameter &OD->list[21]
#define OD_ENTRY_H1400_RPDOCommunicationParameter &OD->list[22]
#define OD_ENTRY_H1600_RPDOMappingParameter &OD->list[23]
#define OD_ENTRY_H1800_TPDOCommunicationParameter &OD->list[24]
#define OD_ENTRY_H1A00_TPDOMappingParameter &OD->list[25]
#define OD_ENTRY_H1F80_NMTStartup &OD->list[26]
#define OD_ENTRY_H1F89_bootTime &OD->list[27]
#define OD_ENTRY_H2001_inputAdjustment &OD->list[28]
#define OD_ENTRY_H2002_outputAdjustment &OD->list[29]
#define OD_ENTRY_H2010_inputClamp &OD->list[30]
#define OD_ENTRY_H2011_outputClamp &OD->list[31]
#define OD_ENTRY_H6000_supportedVirtualDeviceTypes &OD->list[32]
#define OD_ENTRY_H6001_liftNumber &OD->list[33]
#define OD_ENTRY_H6002_floorNumber &OD->list[34]
#define OD_ENTRY_H6003_carDoorNumber &OD->list[35]
#define OD_ENTRY_H6008_specificationVersion &OD->list[36]
#define OD_ENTRY_H6009_certificationLabel &OD->list[37]
#define OD_ENTRY_H6010_virtualInputMapping &OD->list[38]
#define OD_ENTRY_H6011_virtualOutputMapping &OD->list[39]
#define OD_ENTRY_H6080_CM_IdentificationLocation &OD->list[40]
#define OD_ENTRY_H6081_CM_FunctionID &OD->list[41]
#define OD_ENTRY_H6082_CM_Mode &OD->list[42]
#define OD_ENTRY_H6089_CMStatusword &OD->list[43]
#define OD_ENTRY_H608A_CM_SIUnitAndPrefix &OD->list[44]
#define OD_ENTRY_H608B_CM_DataPointConfiguration &OD->list[45]
#define OD_ENTRY_H6100_inputGroup1 &OD->list[46]
#define OD_ENTRY_H6120_inputParameter1Group1 &OD->list[47]
#define OD_ENTRY_H6140_inputParameter2Group1 &OD->list[48]
#define OD_ENTRY_H6160_inputParameter3Group1 &OD->list[49]
#define OD_ENTRY_H6200_outputGroup1 &OD->list[50]
#define OD_ENTRY_H6220_outputParameter1Group1 &OD->list[51]
#define OD_ENTRY_H6240_outputParameter2Group1 &OD->list[52]
#define OD_ENTRY_H6260_outputParameter3Group1 &OD->list[53]
#define OD_ENTRY_H62B0_textPositionIndication &OD->list[54]
#define OD_ENTRY_H6530_floorAndMessageDisplayCar &OD->list[55]
#define OD_ENTRY_H6531_floorAndMessageDisplayShaft &OD->list[56]


/*******************************************************************************
    OD config structure
*******************************************************************************/
#ifdef CO_MULTIPLE_OD
#define OD_INIT_CONFIG(config) {\
    (config).CNT_NMT = OD_CNT_NMT;\
    (config).ENTRY_H1017 = OD_ENTRY_H1017;\
    (config).CNT_HB_CONS = OD_CNT_HB_CONS;\
    (config).CNT_ARR_1016 = OD_CNT_ARR_1016;\
    (config).ENTRY_H1016 = OD_ENTRY_H1016;\
    (config).CNT_EM = OD_CNT_EM;\
    (config).ENTRY_H1001 = OD_ENTRY_H1001;\
    (config).ENTRY_H1014 = OD_ENTRY_H1014;\
    (config).ENTRY_H1015 = OD_ENTRY_H1015;\
    (config).CNT_ARR_1003 = OD_CNT_ARR_1003;\
    (config).ENTRY_H1003 = OD_ENTRY_H1003;\
    (config).CNT_SDO_SRV = OD_CNT_SDO_SRV;\
    (config).ENTRY_H1200 = OD_ENTRY_H1200;\
    (config).CNT_SDO_CLI = OD_CNT_SDO_CLI;\
    (config).ENTRY_H1280 = OD_ENTRY_H1280;\
    (config).CNT_TIME = OD_CNT_TIME;\
    (config).ENTRY_H1012 = OD_ENTRY_H1012;\
    (config).CNT_SYNC = OD_CNT_SYNC;\
    (config).ENTRY_H1005 = OD_ENTRY_H1005;\
    (config).ENTRY_H1006 = OD_ENTRY_H1006;\
    (config).ENTRY_H1007 = OD_ENTRY_H1007;\
    (config).ENTRY_H1019 = OD_ENTRY_H1019;\
    (config).CNT_RPDO = OD_CNT_RPDO;\
    (config).ENTRY_H1400 = OD_ENTRY_H1400;\
    (config).ENTRY_H1600 = OD_ENTRY_H1600;\
    (config).CNT_TPDO = OD_CNT_TPDO;\
    (config).ENTRY_H1800 = OD_ENTRY_H1800;\
    (config).ENTRY_H1A00 = OD_ENTRY_H1A00;\
    (config).CNT_LEDS = 0;\
    (config).CNT_GFC = 0;\
    (config).ENTRY_H1300 = NULL;\
    (config).CNT_SRDO = 0;\
    (config).ENTRY_H1301 = NULL;\
    (config).ENTRY_H1381 = NULL;\
    (config).ENTRY_H13FE = NULL;\
    (config).ENTRY_H13FF = NULL;\
    (config).CNT_LSS_SLV = 0;\
    (config).CNT_LSS_MST = 0;\
    (config).CNT_GTWA = 0;\
    (config).CNT_TRACE = 0;\
}
#endif

#endif /* OD_H */
